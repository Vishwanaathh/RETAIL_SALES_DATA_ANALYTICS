USE RETAIL_DATA_WAREHOUSE;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS;

SELECT TRANSACTION_ID,COUNT(*) FROM BRONZE.RETAIL_SALES_DETAILS GROUP BY TRANSACTION_ID;
SELECT TRANSACTION_ID,COUNT(*) FROM BRONZE.RETAIL_SALES_DETAILS GROUP BY TRANSACTION_ID HAVING COUNT(*)>1 ;


SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE TRANSACTION_ID IN(
SELECT TRANSACTION_ID FROM BRONZE.RETAIL_SALES_DETAILS GROUP BY TRANSACTION_ID HAVING COUNT(*)>1) ORDER BY TRANSACTION_ID;







SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_ID IN( 
SELECT CUST_ID FROM BRONZE.RETAIL_SALES_DETAILS GROUP BY CUST_ID HAVING COUNT(*)>1)


SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE TRANSACTION_ID IS NULL;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_ID IS NULL;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_NAME IS NULL;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_EMAIL IS NULL;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_ADDRESS IS NULL;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_CITY IS NULL;
SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_STATE IS NULL;


SELECT DISTINCT CUST_CITY FROM BRONZE.RETAIL_SALES_DETAILS;

SELECT DISTINCT CUST_STATE FROM BRONZE.RETAIL_SALES_DETAILS;
SELECT DISTINCT CUST_COUNTRY FROM BRONZE.RETAIL_SALES_DETAILS;


SELECT CUST_AGE FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_AGE>100;
SELECT CUST_AGE FROM BRONZE.RETAIL_SALES_DETAILS WHERE CUST_AGE<0;
SELECT DISTINCT CUST_AGE FROM BRONZE.RETAIL_SALES_DETAILS 

SELECT DISTINCT CUST_GNDR FROM BRONZE.RETAIL_SALES_DETAILS ;
SELECT DISTINCT CUST_INCOME FROM BRONZE.RETAIL_SALES_DETAILS;
SELECT DISTINCT TRANSACTION_DATE FROM BRONZE.RETAIL_SALES_DETAILS;

SELECT DISTINCT TRANSACTION_YEAR FROM BRONZE.RETAIL_SALES_DETAILS;
SELECT DISTINCT TRANSACTION_MONTH FROM BRONZE.RETAIL_SALES_DETAILS;

SELECT DISTINCT TRANSACTION_TIME FROM BRONZE.RETAIL_SALES_DETAILS WHERE TRANSACTION_TIME IS NULL;
SELECT DISTINCT TRANSACTION_DATE FROM BRONZE.RETAIL_SALES_DETAILS 

SELECT CONVERT(TIME(0),TRANSACTION_TIME) FROM BRONZE.RETAIL_SALES_DETAILS;

SELECT DISTINCT CUST_PURCHASES FROM BRONZE.RETAIL_SALES_DETAILS;
SELECT DISTINCT PRODUCT_CAT FROM BRONZE.RETAIL_SALES_DETAILS;





SELECT 
TRANSACTION_ID,
CUST_ID,
CASE
WHEN CUST_NAME IS NULL THEN 'N/A'
ELSE CUST_NAME 
END AS CUST_NAME,
CASE
WHEN CUST_EMAIL IS NULL THEN 'N/A'
ELSE CUST_EMAIL
END AS CUST_EMAIL
,
CASE
WHEN CUST_PHONE IS NULL THEN 'N/A'
ELSE CUST_PHONE
END AS CUST_PHONE,

CASE
WHEN CUST_ADDRESS IS NULL THEN 'N/A'
ELSE CUST_ADDRESS
END AS CUST_ADDRESS,
CASE
WHEN CUST_CITY IS NULL THEN 'N/A'
ELSE CUST_CITY
END AS CUST_CITY
,
CASE
WHEN CUST_STATE IS NULL THEN 'N/A'
ELSE CUST_STATE
END AS CUST_STATE,
CASE
WHEN CUST_ZIPCODE IS NULL THEN 0
ELSE CUST_ZIPCODE
END AS CUST_ZIPCODE
,
CASE
WHEN CUST_COUNTRY IS NULL THEN 'N/A'
ELSE CUST_COUNTRY
END AS CUST_COUNTRY,
CASE
WHEN CUST_AGE IS NULL THEN 0
ELSE CUST_AGE
END AS CUST_AGE,
CASE
WHEN CUST_GNDR IS NULL THEN 'N/A'
ELSE CUST_GNDR
END AS CUST_GNDR

,
CASE
WHEN CUST_INCOME IS NULL THEN 'N/A'
ELSE CUST_INCOME
END AS CUST_INCOME,
CASE
WHEN CUST_SEGMENT IS NULL THEN 'N/A'
ELSE CUST_SEGMENT
END AS CUST_SEGMENT
,
TRANSACTION_DATE
,
CONVERT(TIME(0),TRANSACTION_TIME) AS TRANSACTION_TIME
,
CASE
WHEN CUST_PURCHASES IS NULL THEN 0
ELSE CUST_PURCHASES
END AS CUST_PURCHASES,
CASE
WHEN TRANSACTION_AMOUNT IS NULL THEN 0
ELSE TRANSACTION_AMOUNT
END AS TRANSACTION_AMOUNT
,
CASE
WHEN TOTAL_AMOUNT IS NULL THEN 0
ELSE TOTAL_AMOUNT
END AS TOTAL_AMOUNT
,
ISNULL(PRODUCT_CAT, 'N/A') AS PRODUCT_CAT,
ISNULL(PRODUCT_BRAND, 'N/A') AS PRODUCT_BRAND,
ISNULL(PRODUCT_TYPE, 'N/A') AS PRODUCT_TYPE,
ISNULL(PRODUCT_FEEDBACK, 'N/A') AS PRODUCT_FEEDBACK,
ISNULL(PRODUCT_SHIPPING, 'N/A') AS PRODUCT_SHIPPING,
ISNULL(TRANSACTION_METHOD, 'N/A') AS TRANSACTION_METHOD,
ISNULL(ORDER_STATUS, 'N/A') AS ORDER_STATUS,
ISNULL(PRODUCT_RATING, 0) AS PRODUCT_RATING,
ISNULL(PRODUCTS, 'N/A') AS PRODUCTS 
FROM BRONZE.RETAIL_SALES_DETAILS;


SELECT 
    TRANSACTION_ID,
    CUST_ID,
    CUST_NAME,
    CUST_EMAIL,
    CUST_PHONE,
    CUST_ADDRESS,
    CUST_CITY,
    CUST_STATE,
    CUST_ZIPCODE,
    CUST_COUNTRY,
    CUST_AGE,
    CUST_GNDR,
    CUST_INCOME,
    CUST_SEGMENT,
    TRANSACTION_DATE,
    TRANSACTION_TIME,
    CUST_PURCHASES,
    TRANSACTION_AMOUNT,
    TOTAL_AMOUNT,
    PRODUCT_CAT,
    PRODUCT_BRAND,
    PRODUCT_TYPE,
    PRODUCT_FEEDBACK,
    PRODUCT_SHIPPING,
    TRANSACTION_METHOD,
    ORDER_STATUS,
    PRODUCT_RATING,
    PRODUCTS,
    COUNT(*) AS DUPLICATE_COUNT
FROM BRONZE.RETAIL_SALES_DETAILS
GROUP BY 
    TRANSACTION_ID,
    CUST_ID,
    CUST_NAME,
    CUST_EMAIL,
    CUST_PHONE,
    CUST_ADDRESS,
    CUST_CITY,
    CUST_STATE,
    CUST_ZIPCODE,
    CUST_COUNTRY,
    CUST_AGE,
    CUST_GNDR,
    CUST_INCOME,
    CUST_SEGMENT,
    TRANSACTION_DATE,
    TRANSACTION_TIME,
    CUST_PURCHASES,
    TRANSACTION_AMOUNT,
    TOTAL_AMOUNT,
    PRODUCT_CAT,
    PRODUCT_BRAND,
    PRODUCT_TYPE,
    PRODUCT_FEEDBACK,
    PRODUCT_SHIPPING,
    TRANSACTION_METHOD,
    ORDER_STATUS,
    PRODUCT_RATING,
    PRODUCTS
HAVING COUNT(*) > 1;


SELECT * 
FROM (
    SELECT *, 
           ROW_NUMBER() OVER (PARTITION BY TRANSACTION_ID ORDER BY TRANSACTION_DATE DESC) AS RN
    FROM BRONZE.RETAIL_SALES_DETAILS
) AS Sub
WHERE RN = 1;

SELECT * FROM (
  SELECT *, 
         ROW_NUMBER() OVER (PARTITION BY CUST_ID ORDER BY TRANSACTION_DATE DESC) AS RN
  FROM BRONZE.RETAIL_SALES_DETAILS
) AS SUB
WHERE RN = 1;


SELECT * FROM BRONZE.RETAIL_SALES_DETAILS WHERE TRANSACTION_ID IS NULL AND CUST_ID IS NULL;
